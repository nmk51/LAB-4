/*

 * GccApplication2.cpp

 *

 * Created: 2/10/2020 4:18:30 PM

 * Author : nmk51

 */ 



#include <avr/io.h>

char sensorval = 0; //dropping last two bits so can be char


int main(void)

{

   DDRC = 0x00;
   
   DDRD = 0xff;
   PORTD = 0xFF;

   PRR = 0x00; //clears power reduction

   //PORTC = 0xFF; //Clears all bits 

   ADCSRA = 0b10000111; //enables ADC and sets freq to 128

   ADMUX = 0b01100101; //Sets reff volt, sets to left justified, connects to ADC5(PC5)
   // ADCSRA = 1 << ADEN | 1 << ADPS2 | 1 << ADPS1 | 1 << ADPS0;
	//ADMUX = 0 << REFS1 | 1<<REFS0 | 1 << ADLAR;
   

    while (1)

    {

		ADCSRA |= (1<<ADSC); //Turns bit 6 on to start conversion

		while ((ADCSRA & (1<<ADIF))==0){ //Checks bit 4 to see if flag is up(finished reading)

		       sensorval = ADCH; //Reads the sensor val

			  

		if(sensorval >= 0 && sensorval < 51){

		//Turn on lowest light
       
	        PORTD = 0b11111110;
		

		}

		if(sensorval >= 51 && sensorval < 102){

		//Turn on low light

	        PORTD = 0b11111101; 

		}

		if(sensorval >= 102 && sensorval < 153){

		//Neutral Light

		PORTD = 0b11111011;

		}

		if(sensorval >= 153 && sensorval < 204){

		//Turn on medium light
        
		PORTD = 0b11110111;
		

		}

		

		if(sensorval >= 204){

		//Turn on high light

		PORTD = 0b11101111;

		}

		

		

		}

    }

}
